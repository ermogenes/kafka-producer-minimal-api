version: '3'

networks:
  default:
    name: kafkaweb

volumes:
  zk-data:
  zk-logs:
  zk-secrets:
  broker01-data:
  broker01-secrets:
  broker02-data:
  broker02-secrets:
  broker03-data:
  broker03-secrets:

services:

  web:
    container_name: kafkaweb_web
    hostname: web
    build:
      context: src/KafkaWeb
    environment:
      dependencies__broker__producer__BootstrapServers: 'broker01:9092,broker02:9092,broker03:9092'
      dependencies__redis: 'redis:6379'
      WAIT_HOSTS: redis:6379,broker01:9092,broker02:9092,broker03:9092
      WAIT_TIMEOUT: 3600
      WAIT_HOST_CONNECT_TIMEOUT: 60
    ports:
      - 8888:80

  zk:
    hostname: zk
    container_name: kafkaweb_zk
    image: confluentinc/cp-zookeeper:6.2.4
    ports:
      - 42181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_MAX_CLIENT_CNXNS: 0
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 5
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log
      - zk-secrets:/etc/zookeeper/secrets
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity

  broker01:
    container_name: kafkaweb_broker01
    hostname: broker01
    build:
      context: docker/broker
    # ports:
    #   - 49092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk:2181/kafka
      KAFKA_ADVERTISED_HOST_NAME: broker01
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker01:9092
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULTS_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168 # 1 week
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 min
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000 # 1 min
      KAFKA_SCHEMA_REGISTRY_URL: http://registry:8081
      WAIT_HOSTS: zk:2181
      WAIT_TIMEOUT: 3600
      WAIT_HOST_CONNECT_TIMEOUT: 60
    volumes:
      - broker01-data:/var/lib/kafka/data
      - broker01-secrets:/etc/kafka/secrets

  broker02:
    container_name: kafkaweb_broker02
    hostname: broker02
    build:
      context: docker/broker
    # ports:
    #   - 49093:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zk:2181/kafka
      KAFKA_ADVERTISED_HOST_NAME: broker02
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker02:9092
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULTS_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168 # 1 week
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 min
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000 # 1 min
      KAFKA_SCHEMA_REGISTRY_URL: http://registry:8081
      WAIT_HOSTS: zk:2181
      WAIT_TIMEOUT: 3600
      WAIT_HOST_CONNECT_TIMEOUT: 60
    volumes:
      - broker02-data:/var/lib/kafka/data
      - broker02-secrets:/etc/kafka/secrets

  broker03:
    container_name: kafkaweb_broker03
    hostname: broker03
    build:
      context: docker/broker
    # ports:
    #   - 49094:9092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zk:2181/kafka
      KAFKA_ADVERTISED_HOST_NAME: broker03
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker03:9092
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULTS_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168 # 1 week
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 min
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000 # 1 min
      KAFKA_SCHEMA_REGISTRY_URL: http://registry:8081
      WAIT_HOSTS: zk:2181
      WAIT_TIMEOUT: 3600
      WAIT_HOST_CONNECT_TIMEOUT: 60
    volumes:
      - broker03-data:/var/lib/kafka/data
      - broker03-secrets:/etc/kafka/secrets

  redis:
    container_name: kafkaweb_redis
    hostname: redis
    image: redis:latest
    # ports:
    #   - 46379:6379
    command: redis-server --save ''
